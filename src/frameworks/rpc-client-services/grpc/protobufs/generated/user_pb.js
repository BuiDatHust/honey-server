/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.api.CreateUserRequest', null, global);
goog.exportSymbol('proto.api.CreateUserResponse', null, global);
goog.exportSymbol('proto.api.GetListRecommendUserRequest', null, global);
goog.exportSymbol('proto.api.GetListRecommendUserResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetListRecommendUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetListRecommendUserRequest.repeatedFields_, null);
};
goog.inherits(proto.api.GetListRecommendUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetListRecommendUserRequest.displayName = 'proto.api.GetListRecommendUserRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetListRecommendUserRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetListRecommendUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetListRecommendUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetListRecommendUserRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetListRecommendUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    idsList: jspb.Message.getField(msg, 2),
    limit: msg.getLimit()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetListRecommendUserRequest}
 */
proto.api.GetListRecommendUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetListRecommendUserRequest;
  return proto.api.GetListRecommendUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetListRecommendUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetListRecommendUserRequest}
 */
proto.api.GetListRecommendUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.getIdsList().push(value);
      msg.setIdsList(msg.getIdsList());
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetListRecommendUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetListRecommendUserRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetListRecommendUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetListRecommendUserRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = this.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetListRecommendUserRequest} The clone.
 */
proto.api.GetListRecommendUserRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetListRecommendUserRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.GetListRecommendUserRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.GetListRecommendUserRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated string ids = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.api.GetListRecommendUserRequest.prototype.getIdsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<string>} value  */
proto.api.GetListRecommendUserRequest.prototype.setIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


proto.api.GetListRecommendUserRequest.prototype.clearIdsList = function() {
  jspb.Message.setField(this, 2, []);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.api.GetListRecommendUserRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.api.GetListRecommendUserRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetListRecommendUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetListRecommendUserResponse.repeatedFields_, null);
};
goog.inherits(proto.api.GetListRecommendUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetListRecommendUserResponse.displayName = 'proto.api.GetListRecommendUserResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetListRecommendUserResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetListRecommendUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetListRecommendUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetListRecommendUserResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetListRecommendUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetListRecommendUserResponse}
 */
proto.api.GetListRecommendUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetListRecommendUserResponse;
  return proto.api.GetListRecommendUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetListRecommendUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetListRecommendUserResponse}
 */
proto.api.GetListRecommendUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.getIdsList().push(value);
      msg.setIdsList(msg.getIdsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetListRecommendUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetListRecommendUserResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetListRecommendUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetListRecommendUserResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetListRecommendUserResponse} The clone.
 */
proto.api.GetListRecommendUserResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetListRecommendUserResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated string ids = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.api.GetListRecommendUserResponse.prototype.getIdsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<string>} value  */
proto.api.GetListRecommendUserResponse.prototype.setIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.api.GetListRecommendUserResponse.prototype.clearIdsList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.CreateUserRequest.repeatedFields_, null);
};
goog.inherits(proto.api.CreateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateUserRequest.displayName = 'proto.api.CreateUserRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.CreateUserRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateUserRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    sexualOrientation: msg.getSexualOrientation(),
    relationshipGoal: msg.getRelationshipGoal(),
    passionsList: jspb.Message.getField(msg, 4),
    pets: msg.getPets(),
    workout: msg.getWorkout(),
    smoking: msg.getSmoking(),
    sleepingHabit: msg.getSleepingHabit(),
    score: msg.getScore()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateUserRequest}
 */
proto.api.CreateUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateUserRequest;
  return proto.api.CreateUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateUserRequest}
 */
proto.api.CreateUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSexualOrientation(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelationshipGoal(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.getPassionsList().push(value);
      msg.setPassionsList(msg.getPassionsList());
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPets(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkout(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmoking(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSleepingHabit(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateUserRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateUserRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getSexualOrientation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getRelationshipGoal();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getPassionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = this.getPets();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getWorkout();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getSmoking();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getSleepingHabit();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getScore();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateUserRequest} The clone.
 */
proto.api.CreateUserRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateUserRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.CreateUserRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.CreateUserRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string sexual_orientation = 2;
 * @return {string}
 */
proto.api.CreateUserRequest.prototype.getSexualOrientation = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.CreateUserRequest.prototype.setSexualOrientation = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string relationship_goal = 3;
 * @return {string}
 */
proto.api.CreateUserRequest.prototype.getRelationshipGoal = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.CreateUserRequest.prototype.setRelationshipGoal = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated string passions = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.api.CreateUserRequest.prototype.getPassionsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 4));
};


/** @param {Array.<string>} value  */
proto.api.CreateUserRequest.prototype.setPassionsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


proto.api.CreateUserRequest.prototype.clearPassionsList = function() {
  jspb.Message.setField(this, 4, []);
};


/**
 * optional string pets = 5;
 * @return {string}
 */
proto.api.CreateUserRequest.prototype.getPets = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.CreateUserRequest.prototype.setPets = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string workout = 6;
 * @return {string}
 */
proto.api.CreateUserRequest.prototype.getWorkout = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.api.CreateUserRequest.prototype.setWorkout = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string smoking = 7;
 * @return {string}
 */
proto.api.CreateUserRequest.prototype.getSmoking = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.api.CreateUserRequest.prototype.setSmoking = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string sleeping_habit = 8;
 * @return {string}
 */
proto.api.CreateUserRequest.prototype.getSleepingHabit = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.api.CreateUserRequest.prototype.setSleepingHabit = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint32 score = 9;
 * @return {number}
 */
proto.api.CreateUserRequest.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.api.CreateUserRequest.prototype.setScore = function(value) {
  jspb.Message.setField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateUserResponse.displayName = 'proto.api.CreateUserResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateUserResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isSuccess: msg.getIsSuccess()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateUserResponse}
 */
proto.api.CreateUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateUserResponse;
  return proto.api.CreateUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateUserResponse}
 */
proto.api.CreateUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateUserResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateUserResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIsSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateUserResponse} The clone.
 */
proto.api.CreateUserResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateUserResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool is_success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.CreateUserResponse.prototype.getIsSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.api.CreateUserResponse.prototype.setIsSuccess = function(value) {
  jspb.Message.setField(this, 1, value);
};


goog.object.extend(exports, proto.api);
